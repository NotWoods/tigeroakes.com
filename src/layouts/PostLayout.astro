---
import Image from '@11ty/eleventy-img';
import { resolve } from 'path';
import ArticleLayout from '../components/article/ArticleLayout.astro';
import { imageOptions, parentFolder } from '../components/eleventy-img/options';
import Article from '../components/meta/json-ld/Article.astro';
import MainHead from '../components/meta/MainHead.astro';
import Social from '../components/meta/Social.astro';
import { dateFromString } from '../scripts/date';
import { postAccentColor } from '../scripts/posts';
import '../styles/font-extra.css';

const { content, headings } = Astro.props;

const POST_PATH = /^\/(posts|talks)\/([-\w]+)/;
async function postBanner(bannerFile: string | undefined) {
  const match = POST_PATH.exec(Astro.url.pathname);
  if (match && bannerFile) {
    const [, folder, slug] = match;
    const pictureSrc = resolve(
      process.cwd(),
      `src/pages/${folder}/${slug}/${bannerFile}`
    );

    const metadata = await Image(pictureSrc, {
      ...imageOptions,
      formats: ['png'],
      svgShortCircuit: false,
      filenameFormat(id, src, width, format) {
        return `${parentFolder(src)}-banner.${id}.${format}`;
      },
    });
    return new URL(metadata.png[0].url, Astro.site).href;
  }
  return undefined;
}

const formattedProps = {
  title: content.title,
  href: Astro.url,
  accent: postAccentColor(content.tags),
  date: content.date ? dateFromString(content.date) : undefined,
  lastMod: content.lastMod ? dateFromString(content.lastMod) : undefined,
  description: content.description,
  tags: content.tags,
  elsewhere: content.elsewhere,
  tableOfContents: content.toc ? headings : undefined,
  links: content.links,
};

const pictureSrc = await postBanner(content.banner);
---

<html lang="en">
  <head>
    <MainHead
      title={content.title}
      description={content.description}
      canonical={content.elsewhere?.link}
    />
    <Social
      title={content.title}
      description={content.description}
      {pictureSrc}
      pictureAlt={content.banner_alt}
    />
    <Article
      title={content.title}
      date={formattedProps.date}
      lastMod={formattedProps.lastMod}
      images={pictureSrc ? [pictureSrc] : []}
    />
  </head>

  <body class="bg-slate-800 text-slate-200">
    <ArticleLayout {...formattedProps}>
      <slot />
    </ArticleLayout>
  </body>
</html>
