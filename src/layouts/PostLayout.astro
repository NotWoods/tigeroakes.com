---
import ArticleLayout, {
  type Props as ArticleLayoutProps,
} from '../components/article/ArticleLayout.astro';
import Article from '../components/meta/json-ld/Article.astro';
import MainHead from '../components/meta/MainHead.astro';
import Social from '../components/meta/Social.astro';
import { postAccentColor } from '../scripts/posts';
import type { Link } from '../scripts/projects';
import type { ImageOutputFormat, MarkdownHeading } from 'astro';
import { getImage } from 'astro:assets';

interface Props {
  headings?: MarkdownHeading[];
  frontmatter: {
    title: string;
    tags?: readonly string[];
    date: Date;
    lastMod?: Date;
    description?: string;
    elsewhere?: {
      name: string;
      source: string;
      link: string;
    };
    links?: readonly Link[];
    banner?: ImageMetadata;
    banner_alt?: string;
    toc?: boolean;
  };
}

const { frontmatter, headings } = Astro.props as Props;

async function postBanner(bannerFile: ImageMetadata | undefined) {
  if (bannerFile) {
    let format: ImageOutputFormat;
    switch (bannerFile.format) {
      case 'png':
      case 'jpeg':
      case 'jpg':
        format = bannerFile.format;
        break;
      case 'svg':
        format = 'png';
        break;
      default:
        format = 'jpg';
    }

    const metadata = await getImage({
      src: bannerFile,
      format,
    });
    return new URL(metadata.src, Astro.url);
  }
  return undefined;
}

const formattedProps: ArticleLayoutProps = {
  title: frontmatter.title,
  href: Astro.url,
  accent: postAccentColor(frontmatter.tags),
  date: frontmatter.date,
  lastMod: frontmatter.lastMod,
  description: frontmatter.description,
  tags: frontmatter.tags,
  elsewhere: frontmatter.elsewhere,
  tableOfContents: frontmatter.toc ? headings : undefined,
  links: frontmatter.links,
};

const pictureSrc = (await postBanner(frontmatter.banner))?.toString();
---

<html lang="en">
  <head>
    <MainHead
      title={frontmatter.title}
      description={frontmatter.description!}
      canonical={frontmatter.elsewhere?.link}
    />
    <Social
      title={frontmatter.title}
      description={frontmatter.description!}
      pictureSrc={pictureSrc}
      pictureAlt={frontmatter.banner_alt}
    />
    <Article
      title={frontmatter.title}
      date={formattedProps.date}
      lastMod={formattedProps.lastMod}
      images={pictureSrc ? [pictureSrc] : []}
    />
  </head>

  <body class="bg-slate-800 text-slate-200">
    <ArticleLayout {...formattedProps}>
      <slot />
    </ArticleLayout>
  </body>
</html>
