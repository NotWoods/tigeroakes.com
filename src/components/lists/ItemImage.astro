---
import { Picture } from '@astrojs/image/components';

export interface Props {
  src: ImageMetadata | Promise<{ default: ImageMetadata }>;
  alt?: string;
  width: number;
  sizes: string;
  class?: string;
  fit?: 'cover' | 'contain';
  loading?: 'eager' | 'lazy';
  aspect: 'half' | 'video';
}

function getDefault(src: ImageMetadata | { default: ImageMetadata }) {
  if ('default' in src) {
    return src.default;
  }
  return src;
}

const {
  src,
  alt = '',
  fit,
  width,
  aspect,
  sizes,
  loading = 'lazy',
  class: className,
} = Astro.props as Props;
const imgClass = [
  fit === 'contain' ? 'object-contain' : 'object-cover',
  'shadow-md bg-slate-200',
  className,
]
  .filter(Boolean)
  .join(' ');
const pictureClass =
  aspect === 'half'
    ? 'aspect-w-2 aspect-h-1 mb-2'
    : 'aspect-w-16 aspect-h-9 mb-2';

const metadata = getDefault(await src);
---

<Picture
  src={metadata}
  alt={alt}
  loading={loading}
  sizes={sizes}
  formats={metadata.format === 'svg'
    ? ['svg']
    : ['avif', 'webp', metadata.format as 'png' | 'jpeg' | 'jpg']}
  aspectRatio={aspect === 'half' ? '2:1' : '16:9'}
  fit={fit}
  widths={[width, width * 2, width * 4]}
  class={imgClass}
/>
