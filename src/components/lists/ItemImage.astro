---
import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';
import type { ImageFormat } from '../../scripts/picture';

export interface Props {
  src: ImageMetadata;
  alt?: string;
  width: number;
  sizes: string;
  class?: string;
  fit?: 'cover' | 'contain';
  loading?: 'eager' | 'lazy';
  aspect: 'half' | 'video';
}

const {
  src: metadata,
  alt = '',
  fit,
  width,
  aspect,
  class: className,
  ...props
} = Astro.props as Props;

const fitClass = fit === 'contain' ? 'object-contain' : 'object-cover';
const aspectClass = aspect === 'half' ? 'aspect-half' : 'aspect-video';
const height = aspect === 'half' ? width / 2 : (width * 9) / 16;

const formats: ImageFormat[] =
  metadata.format === 'svg' ? ['svg'] : ['avif', 'webp', metadata.format];
---

<Picture
  {...props}
  {width}
  {height}
  src={metadata}
  {alt}
  class:list={[fitClass, 'h-full w-full bg-slate-200 shadow-md', className]}
  pictureAttributes={{ class: `w-full mb-2 ${aspectClass}` }}
  {formats}
  densities={[1, 2, 4]}
/>
