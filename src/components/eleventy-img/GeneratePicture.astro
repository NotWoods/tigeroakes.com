---
import { generateObject, type Metadata } from '@11ty/eleventy-img';
import type {
  ImgAttributes,
  PictureAttributes,
  SourceAttributes,
} from '@11ty/eleventy-img/generate-html';

export interface Props {
  metadata: Metadata;
  attributes: {
    alt: string;
    sizes?: string;
    decoding?: 'sync' | 'async';
    loading?: 'eager' | 'lazy';
  };
  pictureClass?: string;
  imgClass?: string;
}

const { metadata, attributes, pictureClass, imgClass } = Astro.props as Props;

function isImg<T>(
  tag: ImgAttributes<T> | PictureAttributes<T> | SourceAttributes
): tag is ImgAttributes<T> {
  return Boolean((tag as ImgAttributes<T>).img);
}

const tag = generateObject(metadata, attributes);
---

<picture class={pictureClass}>
  {isImg(tag)
    ? <img {...tag.img} class={imgClass} />
    : tag.picture.map(tag => isImg(tag)
      ? <img {...tag.img} class={imgClass} />
      : <source {...tag.source} />)}
</picture>
