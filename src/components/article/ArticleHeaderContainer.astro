---
import { getInlineBackgroundImage } from '../../scripts/background-image';
import Buttons, { type ButtonProps } from '../Buttons.astro';
import Polymorphic from './Polymorphic.astro';

export interface Props {
  as?: 'header' | 'article';
  class?: string;
  padding?: string;
  buttonsClass?: string;
  style?: string;
  accent?: string;
  backgroundImage?: ImageMetadata;
  buttons?: readonly ButtonProps[];
}

const {
  as = 'header',
  buttons = [],
  accent,
  backgroundImage,
  style = '',
  class: className,
  padding = 'p-4',
  buttonsClass = 'text-lg justify-center',
} = Astro.props as Props;

const styles =
  [
    accent && `--accent: ${accent}`,
    backgroundImage &&
      (await getInlineBackgroundImage({
        src: backgroundImage,
        width: backgroundImage.width,
        formats: ['avif', 'webp', 'jpeg'],
      })),
    style,
  ]
    .filter(Boolean)
    .join(';') || undefined;

const contentClass = 'max-w-site mx-auto py-4 safe-px-4 w-full';
---

<Polymorphic
  as={as}
  style={styles}
  class:list={[
    'bg-cover bg-center bg-no-repeat text-slate-200 shadow-md',
    { 'grid-area-header': as === 'header', 'text-shadow': backgroundImage },
    className,
  ]}
>
  <div class:list={['backdrop-blur-sm', padding]}>
    <div class={contentClass}>
      <slot />
      <Buttons class={buttonsClass} buttons={buttons} />
    </div>
  </div>
</Polymorphic>
