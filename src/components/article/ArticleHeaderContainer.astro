---
import type { ButtonProps } from '../Buttons.astro';
import ArticleHeaderContainerContent from './ArticleHeaderContainerContent.astro';

export interface Props {
  as?: 'header' | 'article';
  class?: string;
  style?: string;
  accent?: string;
  backgroundImage?: string;
  buttons?: readonly ButtonProps[];
}

const {
  as = 'header',
  buttons,
  accent,
  backgroundImage,
  style = '',
  class: className,
} = Astro.props as Props;

const classes = [
  'text-slate-200 bg-center bg-cover bg-no-repeat',
];
if (as === 'header') {
  classes.push('p-4 grid-area-header');
}
if (backgroundImage) {
  classes.push('text-shadow');
}
if (className) {
  classes.push(className);
}

const styles = [
  accent && `--accent: ${accent}`,
  backgroundImage && `background-image: url(${backgroundImage})`,
  style,
].filter(Boolean);

const props = {
  class: classes.join(' '),
  style: styles.length > 0 ? styles.join(';') : undefined,
}
---

{as === 'article'
  ? <article {...props}>
      <ArticleHeaderContainerContent {buttons}>
        <slot />
      </ArticleHeaderContainerContent>
    </article>
  : <header {...props}>
      <ArticleHeaderContainerContent {buttons}>
        <slot />
     </ArticleHeaderContainerContent>
    </header>}
