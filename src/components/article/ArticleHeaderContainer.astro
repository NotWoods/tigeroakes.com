---
import { getPicture } from '@astrojs/image';
import { metadataToBackgroundImage } from '../../scripts/background-image';
import Buttons, { ButtonProps } from '../Buttons.astro';
import Polymorphic from './Polymorphic.astro';

export interface Props {
  as?: 'header' | 'article';
  class?: string;
  buttonsClass?: string;
  style?: string;
  accent?: string;
  backgroundImage?: ImageMetadata;
  buttons?: readonly ButtonProps[];
}

const {
  as = 'header',
  buttons,
  accent,
  backgroundImage,
  style = '',
  class: className,
  buttonsClass = 'text-lg justify-center',
} = Astro.props as Props;

const classes = ['text-slate-200 bg-center bg-cover bg-no-repeat shadow-md'];
if (as === 'header') {
  classes.push('p-4 grid-area-header');
}
if (backgroundImage) {
  classes.push('text-shadow');
}
if (className) {
  classes.push(className);
}

const styles = [
  accent && `--accent: ${accent}`,
  backgroundImage &&
    metadataToBackgroundImage(
      await getPicture({
        src: backgroundImage,
        alt: '',
        widths: [backgroundImage.width],
        formats: ['avif', 'webp', 'jpeg'],
      })
    ),
  style,
].filter(Boolean);

const props = {
  class: classes.join(' '),
  style: styles.length > 0 ? styles.join(';') : undefined,
};

const contentClass = 'max-w-site mx-auto p-4 w-full';
---

<Polymorphic as={as} {...props}>
  <div class={contentClass}>
    <slot />
    <Buttons class={buttonsClass} buttons={buttons} />
  </div>
</Polymorphic>
