---
import { Image, getImage } from 'astro:assets';

export interface Props {
  logo: ImageMetadata;
}

const { logo } = Astro.props as Props;

const formats = logo.format === 'svg' ? ['svg'] : ['avif', 'webp', logo.format];
const widths = [128, 256, 512];

const sources = await Promise.all(
  formats.map(async (format) => {
    const sourceSet = await Promise.all(
      widths.map(async (width) => {
        const image = await getImage({ src: logo, width, format });
        return `${image.src} ${width}w`;
      })
    );

    let type = `image/${format}`;
    if (format === 'svg') {
      type = 'image/svg+xml';
    }

    return { format, sourceSet, type };
  })
);
---

<picture>
  {
    sources.map(({ sourceSet, type }) => (
      <source type={type} srcset={sourceSet.join(', ')} sizes="128px" />
    ))
  }
  <Image src={logo} alt="" class="w-32 h-32" />
</picture>
